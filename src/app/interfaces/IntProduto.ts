import { EnumSexo } from '../enum/EnumSexo';
import { EnumSimNao } from '../enum/EnumSimNao';
import { IntCategoria } from './IntCategoria';
import { IntCategoriaIdade } from './IntCategoriaIdade';
import { IntClassEpmuras } from './IntClassEpmuras';
import { IntClassificacao } from './IntClassificacao';
import { IntCriador } from './IntCriador';
import { IntFazenda } from './IntFazenda';
import { IntNomeProduto } from './IntNomeProduto';
import { IntOcorrenciaReprod } from './IntOcorrenciaReprod';
import { IntOrigem } from './IntOrigem';
import { IntPelagem } from './IntPelagem';
import { IntProprietario } from './IntProprietario';
import { IntRaca } from './IntRaca';
import { IntSimNao } from './IntSimNao';
import { IntSituacaoReprod } from './IntSituacaoReprod';
import { IntStatus } from './IntStatus';
import { IntTipoParto } from './IntTipoParto';
import { IntTipoProduto } from './IntTipoProduto';

export interface IntProduto {
  codigo: number;
  fazenda: IntFazenda;
  raca: IntRaca;
  categoria: IntCategoria;
  sexo: EnumSexo;
  serie: string;
  rgn: string;
  rgd: string;
  proprietario: IntProprietario //TODO: Alterar para o tipo IntPessoa
  brinco: string;
  sisbov: string;
  apelido: string;
  tipagem: IntSimNao;
  dna: IntSimNao;
  padrao: EnumSimNao;
  dataNascimento: Date;
  situacaoReprod: IntSituacaoReprod;
  pesoNascimento: number;
  pesoNascimentoABCZ: number;
  status: IntStatus;
  ocorrenciaReprod: IntOcorrenciaReprod;
  produtoMae?: IntProduto;
  produtoPai?: IntProduto;
  tipoProduto: IntTipoProduto;
  classificacao: IntClassificacao;
  cdnFechada: boolean;
  indPonderal: boolean;
  indImprimir: boolean;
  dataRGD: Date;
  pelagem: IntPelagem;
  origemAnimal: IntOrigem;
  // dadosProduto: IntDadosProduto;
  // comercial: IntComercial;
  nomeProduto: IntNomeProduto;
  // grauSangue: IntGrauSangue;
  categoriaIdade: IntCategoriaIdade;
  // usuarioUltimaAlteracao: number; //Auditoria
  observacao: string;
  idadeDias: number;
  idadeMeses: number;
  idadeExtensa: string;
  registro: string;
  grupoManejo: string;
  epmuras: IntClassEpmuras;
  registroReceptora: string;
  criador: IntCriador;
  diaNascimento: number;
  // consideraLicenciadoConsulta: boolean;
  // filtrarAnimaisAtivos: boolean;
  numeroCdn: number;
  // touroInseminacao: boolean;
  tipoParto: IntTipoParto;
  deca: string;
  iABCZ: string;
  F: string;
}
